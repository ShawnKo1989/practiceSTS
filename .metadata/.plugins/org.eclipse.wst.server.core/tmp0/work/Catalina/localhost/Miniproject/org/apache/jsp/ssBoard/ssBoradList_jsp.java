/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-08-21 08:04:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ssBoard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dao.SsboardDao;
import java.util.ArrayList;
import dto.SsboardDto;

public final class ssBoradList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("dto.SsboardDto");
    _jspx_imports_classes.add("dao.SsboardDao");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	int pageNum =0;
	try{
		pageNum = Integer.parseInt(request.getParameter("pageNum"));
	}catch(NumberFormatException e){
		pageNum = 1;
	}

	ArrayList<SsboardDto> sbList = new ArrayList<SsboardDto>();
	SsboardDao sbDao = SsboardDao.getInstance();
	sbList = sbDao.getSsboardList(sbList, pageNum);

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>스크린샷 게시판</title>\r\n");
      out.write("<script src=\"/Miniproject/js/jquery-3.7.0.min.js\"></script>\r\n");
      out.write("<link href=\"/Miniproject/css/ssBoardList.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"outline\">\r\n");
      out.write("		<div class=\"headTitle\">\r\n");
      out.write("			<h1>스크린샷 게시판</h1>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"headSub\">\r\n");
      out.write("			<h3>유저들이 간단한 스크린샷을 올릴수 있는 게시판입니다.</h3>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"selectBar\">\r\n");
      out.write("			<div class=\"select_left\">\r\n");
      out.write("				<select name=\"selectBoard\" class=\"selectBoard\">\r\n");
      out.write("					<option>전체</option>\r\n");
      out.write("					<option>스크린샷</option>\r\n");
      out.write("					<option>동영상</option>\r\n");
      out.write("				</select>\r\n");
      out.write("				<input type=\"search\" name=\"searchingTitle\" class=\"searchingBar\"/>\r\n");
      out.write("				<input type=\"submit\" value=\"검색\" class=\"searchingBtn\"/>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"select_right\">\r\n");
      out.write("				<input type=\"submit\" value=\"글쓰기\" class=\"writeBtn\"/>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		");
 int z =0;
      out.write("\r\n");
      out.write("		<table>\r\n");
      out.write("			");
 for(int i = 1; i<=sbList.size()/5; i++){
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("				");
for(int j = z; j<= z+4; j++){
      out.write("\r\n");
      out.write("				<td class=\"sigleBoardContent\">\r\n");
      out.write("					<input type=\"hidden\" value=\"");
      out.print(sbList.get(j).getSsbno());
      out.write("\"/>\r\n");
      out.write("					<div class=\"imgBox\"><img src=\"");
      out.print(sbList.get(j).getSscontents());
      out.write("\"></div>\r\n");
      out.write("					<div class=\"ssTitle\">");
      out.print(sbList.get(j).getSstitle());
      out.write("</div>\r\n");
      out.write("					<div class=\"ssWriter\">작성자 : ");
      out.print(sbList.get(j).getSswriter() );
      out.write("</div>\r\n");
      out.write("					<div class=\"ssWriteDate\">\r\n");
      out.write("					");
      out.print(sbList.get(j).getSsWriteDate());
      out.write("<br/>\r\n");
      out.write("					<img src=\"https://i.pinimg.com/originals/49/85/1c/49851c166722c7cb9f9cf905f617e266.png\">좋아요 ");
      out.print(sbList.get(j).getSslike() );
      out.write("명, \r\n");
      out.write("					<img src=\"https://cdn-icons-png.flaticon.com/512/2394/2394105.png\">조회수: ");
      out.print(sbList.get(j).getSsview() );
      out.write("명\r\n");
      out.write("					</div>\r\n");
      out.write("				</td>\r\n");
      out.write("				");
} z+=5;
      out.write("\r\n");
      out.write("			</tr>\r\n");
      out.write("			");
}
			double pageCount = (double)sbList.get(0).getTotalNum()/25;
			
      out.write("\r\n");
      out.write("		</table>\r\n");
      out.write("		<div class=\"pagenation\">\r\n");
      out.write("			");
for(int i = 1; i<= Math.ceil(pageCount); i++){  
      out.write("\r\n");
      out.write("				<div class=\"singlePageNum\">\r\n");
      out.write("					<a href=\"/Miniproject/ssBoard/ssBoradList.jsp?pageNum=");
      out.print(i);
      out.write('"');
      out.write(' ');
      out.write('>');
      out.print(i );
      out.write("</a>\r\n");
      out.write("				</div>\r\n");
      out.write("			");
} 
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script>\r\n");
      out.write("		//알림메시지가 있을경우 작동\r\n");
      out.write("		var message = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("		if(message!='null'&& message!=''){\r\n");
      out.write("			alert(message);\r\n");
      out.write("		}\r\n");
      out.write("		//콘텐츠 클릭시 해당 콘텐츠페이지로 이동\r\n");
      out.write("		$(function(){\r\n");
      out.write("			$(\"td\").click(function(){\r\n");
      out.write("				var ssbno = $(this).children().first().val();\r\n");
      out.write("				location.href=\"/Miniproject/Controller?command=SsBoardPageMoveAction&ssbno=\"+ssbno;\r\n");
      out.write("			});\r\n");
      out.write("			$(\".writeBtn\").click(function(){\r\n");
      out.write("				location.href=\"/Miniproject/Controller?command=SsBoardWriteMoveAction\";\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
